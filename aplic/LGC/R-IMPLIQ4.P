&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12
&ANALYZE-RESUME
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS Procedure 
/*--------------------------------------------------------------------------
    File        : r-impcmp.p
    Purpose     : 

    Syntax      :

    Description : Imprime Orden de Compra

    Author(s)   :
    Created     :
    Notes       :
  ------------------------------------------------------------------------*/
/*          This .W file was created with the Progress UIB.               */
/*------------------------------------------------------------------------*/

/* ***************************  Definitions  ************************** */
DEFINE INPUT PARAMETER X-ROWID AS ROWID.

DEFINE SHARED VARIABLE S-CODCIA AS INTEGER.
DEFINE SHARED VARIABLE PV-CODCIA AS INTEGER.
DEF SHARED VAR S-NomCia AS CHAR.
DEF VAR C-ConPgo   AS CHAR FORMAT "X(50)" NO-UNDO.
DEF VAR X-EnLetras AS CHAR FORMAT "X(100)" NO-UNDO.
DEF VAR I-NroItm AS INTEGER NO-UNDO.
DEF VAR C-Moneda AS CHAR INIT "S/." FORMAT "X(3)".
DEF VAR C-UNIT0   AS DECIMAL INIT 0.
DEF VAR C-UNIT1   AS DECIMAL INIT 0.
DEF VAR C-UNIT2   AS DECIMAL INIT 0.
DEF VAR C-IGV     AS DECIMAL INIT 0.
DEF SHARED VAR s-coddiv LIKE gn-divi.coddiv.
DEF        VAR W-DIRALM AS CHAR FORMAT "X(50)".
DEF        VAR W-TLFALM AS CHAR FORMAT "X(13)".
DEF VAR N-ITEM     AS INTEGER INIT 0 NO-UNDO.
DEF VAR X-NRO      AS CHARACTER FORMAT "x(9)".
DEF VAR X-NROREF   AS CHARACTER FORMAT "x(9)".
DEF VAR X-PERIODO  AS CHARACTER FORMAT "x(30)".
DEF VAR X-TOT AS DECI INIT 0.
DEF VAR X-PREUNI AS DECI .

DEFINE STREAM Reporte.

FIND LG-liqcsg WHERE ROWID(LG-liqcsg) = X-ROWID NO-LOCK NO-ERROR.
IF NOT AVAILABLE LG-liqcsg THEN RETURN.

IF LG-liqcsg.Codmon = 2 THEN C-Moneda = "US$".
FIND gn-prov WHERE gn-prov.CodCia = PV-CODCIA 
              AND  gn-prov.CodPro = LG-liqcsg.CodPro 
             NO-LOCK NO-ERROR.
/*
FIND gn-ConVt WHERE gn-ConVt.Codig = LG-liqcsg.CndCmp NO-LOCK NO-ERROR.
IF AVAILABLE gn-ConVt THEN C-ConPgo = Gn-ConVt.Nombr.
*/
/*
FIND Almacen WHERE Almacen.CodCia = LG-liqcsg.CodCia 
              AND  Almacen.CodAlm = LG-liqcsg.CodAlm 
             NO-LOCK NO-ERROR.
*/
DEF VAR X-MARGEN AS DECI INIT 0.
DEF VAR X-UNDMIN AS CHAR INIT "".
DEF VAR X-equival AS DECI INIT 0.
DEF VAR X-precon AS DECI INIT 0.
DEF VAR X-porce AS char INIT "%".
DEF VAR F-Estado AS CHAR INIT "".

IF LOOKUP(LG-liqcsg.FlgEst,"X,G,P,A,T,V") > 0 THEN
F-Estado = ENTRY(LOOKUP(LG-liqcsg.FlgEst,"X,G,P,A,T,V"),"Rechazado,Emitido,Aprobado,Anulado,Aten.Total,Vencida").


/************************  PUNTEROS EN POSICION  *******************************/
IF LG-liqcsg.CodMon = 2 THEN RUN bin/_numero(LG-liqcsg.ImpMn2, 2, 1, OUTPUT X-EnLetras).
IF LG-liqcsg.CodMon = 1 THEN RUN bin/_numero(LG-liqcsg.ImpMn1, 2, 1, OUTPUT X-EnLetras).

X-EnLetras = "SON : " + X-EnLetras + (IF LG-liqcsg.Codmon = 1 THEN " NUEVOS SOLES" ELSE " DOLARES AMERICANOS").

/************************  DEFINICION DE FRAMES  *******************************/

DEFINE VAR W-VTA0 AS DECI .
DEFINE VAR W-VTA1 AS DECI .
DEFINE VAR W-VTA2 AS DECI .
DEFINE VAR S-SUBTO AS DECI .
DEFINE VAR S-TOTAL AS DECI.
DEFINE BUFFER B-LIQ FOR LG-liqcsg.
DEFINE VAR B-TOT AS DECI.
DEFINE VAR B-MON AS CHAR.
DEFINE VAR I AS INTEGER .
DEFINE VAR Z AS INTEGER.

FIND LAST Lg-cfgliqp WHERE Lg-cfgliqp.Codcia = S-CODCIA AND
                           Lg-cfgliqp.Tpoliq = LG-liqcsg.NroSer AND
                           Lg-cfgliqp.CodPro = lg-liqcsg.CodPro
                           NO-LOCK NO-ERROR.
    
IF NOT AVAILABLE Lg-cfgliqp THEN RETURN.


FIND lg-cfgcpr WHERE lg-cfgcpr.CodCia = S-CODCIA AND
                     lg-cfgcpr.TpoLiq = LG-liqcsg.NroSer 
                     NO-LOCK NO-ERROR.

IF NOT AVAILABLE lg-cfgcpr THEN RETURN.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Procedure
&Scoped-define DB-AWARE no



/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Procedure
   Allow: 
   Frames: 0
   Add Fields to: Neither
   Other Settings: CODE-ONLY COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW Procedure ASSIGN
         HEIGHT             = 2
         WIDTH              = 40.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB Procedure 
/* ************************* Included-Libraries *********************** */

{src/bin/_prns.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK Procedure 


/* ***************************  Main Block  *************************** */


RUN aderb/_prlist.p(
    OUTPUT s-printer-list,
    OUTPUT s-port-list,
    OUTPUT s-printer-count).

X-NRO = STRING(LG-liqcsg.NroSer, "999") +  STRING(LG-liqcsg.NroDoc, "999999").


DEFINE FRAME F-Deta1
    Almcmov.CodAlm COLUMN-LABEL "Alm."
    Almcmov.TipMov COLUMN-LABEL "Tipo"
    Almcmov.CodMov COLUMN-LABEL "Mov."
    Almcmov.NroDoc COLUMN-LABEL "Documento"
    Almcmov.FchDoc FORMAT "99/99/9999" COLUMN-LABEL "Fecha"
    Almdmov.CodMat COLUMN-LABEL "Codigo"
    Almmmatg.DesMat   FORMAT "X(40)" COLUMN-LABEL "Descripcion"
    Almmmatg.Desmar   FORMAT "X(10)" COLUMN-LABEL "Marca"
    Almdmov.CodUnd FORMAT "X(5)" COLUMN-LABEL "UM"
    Almdmov.CanDes FORMAT "->>>,>>9.9999" COLUMN-LABEL "Cantidad"
    WITH NO-UNDERLINE NO-BOX WIDTH 145 STREAM-IO DOWN.         

DEFINE FRAME F-Deta2
    Almcmov.CodAlm COLUMN-LABEL "Alm."
    Almcmov.tipMov COLUMN-LABEL "Tipo"
    Almcmov.CodMov COLUMN-LABEL "Mov."
    Almcmov.NroDoc COLUMN-LABEL "Documento"
    Almcmov.FchDoc FORMAT "99/99/9999" COLUMN-LABEL "Fecha"
    Almdmov.CodMat FORMAT "X(6)" COLUMN-LABEL "Codigo"
    Almmmatg.DesMat FORMAT "X(40)" COLUMN-LABEL "Descripcion"
    Almmmatg.Desmar FORMAT "X(10)" COLUMN-LABEL "Marca"
    Almdmov.CodUnd FORMAT "X(5)" COLUMN-LABEL "UM"
    Almdmov.CanDes FORMAT "->>>,>>9.9999" COLUMN-LABEL "Cantidad"
    WITH NO-UNDERLINE NO-BOX WIDTH 145 STREAM-IO DOWN.         

DEFINE FRAME F-Deta3
    B-LIQ.NroSer 
    B-LIQ.NroDoc 
    B-LIQ.FchDoc FORMAT "99/99/9999"  COLUMN-LABEL "Fecha"
    B-LIQ.FchIni FORMAT "99/99/9999"  COLUMN-LABEL "Fecha!Desde"
    B-LIQ.FchFin FORMAT "99/99/9999"  COLUMN-LABEL "Fecha!Hasta"
    B-Mon FORMAT "X(5)" COLUMN-LABEL "Moneda"
    B-TOT FORMAT "->>>,>>9.99"  COLUMN-LABEL "Importe "
    Lg-Liqcsgd.CodMat FORMAT "X(6)"  COLUMN-LABEL "Codigo"
    Almmmatg.DesMat FORMAT "X(40)" COLUMN-LABEL "Descripcion"
/*    Almmmatg.DesMar FORMAT "X(10)" COLUMN-LABEL "Marca"*/
    Lg-Liqcsgd.CodUnd FORMAT "X(5)" COLUMN-LABEL "UM"
    Lg-Liqcsgd.CanDes FORMAT "->>>,>>9.9999" COLUMN-LABEL "Cantidad"
    WITH NO-UNDERLINE NO-BOX WIDTH 145 STREAM-IO DOWN.         

DEFINE FRAME F-Cabe
      HEADER
    {&PRN2} + {&PRN7A} + {&PRN6A} + S-NOMCIA + {&PRN6B} + {&PRN7B} + {&PRN3} FORMAT "X(45)"  
    "( Detalle-Mov )" AT 70 
    {&PRN6A} + F-Estado +  {&PRN6B} AT 90 FORMAT "X(15)" skip
    {&PRN7A} + {&PRN6A} + "LIQ.CONSIGNACION " + {&PRN6B} + {&PRN7B} + {&PRN3} AT 10 FORMAT "X(22)" 
    {&PRN7A} + {&PRN6A} + X-NRO + {&PRN6B} + {&PRN7B} + {&PRN3} format "x(12)"
    SKIP
    "Proveedor : " gn-prov.CodPro gn-prov.NomPro FORMAT "x(45)"
    "Fecha Emision :" AT 85 LG-liqcsg.Fchdoc FORMAT "99/99/9999"
    SKIP
    "RUC : " gn-prov.Ruc  FORMAT "x(11)"
    SKIP
    "Periodo Liquidado :" LG-liqcsg.FchIni FORMAT "99/99/9999" " Al " LG-liqcsg.FchFin FORMAT "99/99/9999" SKIP
    "------------------------------------------------------------------------------------------------------------------------------" SKIP
    WITH NO-LABEL NO-UNDERLINE NO-BOX WIDTH 145 STREAM-IO DOWN.         


OUTPUT STREAM Reporte TO PRINTER PAGED PAGE-SIZE 62.
PUT STREAM Reporte CONTROL {&PRN0} + {&PRN5A} + CHR(66) + {&PRN3}.     

VIEW STREAM Reporte FRAME F-Cabe.

/*   IF FIRST-OF(Almcmov.Codcia) THEN DO:*/
      PUT STREAM Reporte "I N G R E S O S   " SKIP.
      PUT STREAM Reporte "------------------" SKIP.      
/*   END.                                   */

   DO I = 1 TO NUM-ENTRIES(LG-Cfgcpr.Almacenes):

    FOR EACH Almcmov NO-LOCK WHERE Almcmov.Codcia = S-CODCIA AND
                                   Almcmov.CodAlm = ENTRY(I,LG-Cfgcpr.Almacenes) AND
                                   Almcmov.TipMov = LG-Cfgcpr.TipMov[1] AND
                                   Almcmov.CodMov = LG-Cfgcpr.CodMov[1] AND
                                   Almcmov.FlgEst <> "A" AND                                   
                                   Almcmov.FchDoc >= Lg-liqcsg.FchIni AND
                                   Almcmov.FchDoc <= Lg-liqcsg.FchFin AND
                                   Almcmov.CodPro = lg-liqcsg.CodPro :
                                   

       Z = 1.
       FOR EACH AlmdMov OF ALmcmov:
           FIND Almmmatg WHERE Almmmatg.CodCia = Almdmov.CodCia AND
                               Almmmatg.CodMat = Almdmov.CodMat 
                               NO-LOCK NO-ERROR.
            DISPLAY STREAM Reporte 
               Almcmov.CodAlm WHEN z = 1
               Almcmov.tipMov WHEN z = 1
               Almcmov.CodMov WHEN z = 1
               Almcmov.NroDoc WHEN z = 1
               Almdmov.CodMat
               Almmmatg.DesMat   
               Almmmatg.Desmar   
               Almdmov.CodUnd 
               Almdmov.CanDes
            WITH FRAME F-Deta1.
            DOWN STREAM Reporte WITH FRAME F-Deta1.  
            Z = Z + 1.
       END.
    END.
   END.
       
/*   IF FIRST-OF(Almcmov.Codcia) THEN DO:*/
      PUT STREAM Reporte "D E V O L U C I O N E S " SKIP.
      PUT STREAM Reporte "------------------------" SKIP.      
/*   END.                                   */

   DO I = 1 TO NUM-ENTRIES(LG-Cfgcpr.Almacenes):

    FOR EACH Almcmov NO-LOCK WHERE Almcmov.Codcia = S-CODCIA AND
                                   Almcmov.CodAlm = ENTRY(I,LG-Cfgcpr.Almacenes) AND
                                   Almcmov.TipMov = LG-Cfgcpr.TipMov[2] AND
                                   Almcmov.CodMov = LG-Cfgcpr.CodMov[2] AND
                                   Almcmov.FlgEst <> "A" AND                                   
                                   Almcmov.FchDoc >= Lg-liqcsg.FchIni AND
                                   Almcmov.FchDoc <= Lg-liqcsg.FchFin AND
                                   Almcmov.CodPro = lg-liqcsg.CodPro :
                                   

       Z = 1.
       FOR EACH AlmdMov OF ALmcmov:
           FIND Almmmatg WHERE Almmmatg.CodCia = Almdmov.CodCia AND
                               Almmmatg.CodMat = Almdmov.CodMat 
                               NO-LOCK NO-ERROR.
            DISPLAY STREAM Reporte 
               Almcmov.CodAlm WHEN z = 1
               Almcmov.tipMov WHEN z = 1
               Almcmov.CodMov WHEN z = 1
               Almcmov.NroDoc WHEN z = 1
               Almdmov.CodMat
               Almmmatg.DesMat   
               Almmmatg.Desmar   
               Almdmov.CodUnd 
               Almdmov.CanDes
            WITH FRAME F-Deta2.
            DOWN STREAM Reporte WITH FRAME F-Deta2.  
            Z = Z + 1.
       END.
    END.
   END.

/*   IF FIRST-OF(Almcmov.Codcia) THEN DO:*/
      PUT STREAM Reporte "L I Q U I D A C I O N E S " SKIP.
      PUT STREAM Reporte "--------------------------" SKIP.      
/*   END.                                   */

    FOR EACH B-LIQ WHERE B-LIQ.Codcia = S-CODCIA AND
                             B-LIQ.NroSer = Lg-cfgcpr.TpoLiq AND
                             B-LIQ.CodPro = lg-liqcsg.CodPro AND
                             B-LIQ.FchDoc >= Lg-liqcsg.FchIni AND
                             B-LIQ.FchDoc <= Lg-liqcsg.FchFin AND
                             B-LIQ.FlgEst <> "A":
/*        IF B-LIQ.NroDoc = Lg-Liqcsg.NroDoc THEN NEXT.*/
        IF B-LIQ.CodMon = 1 THEN DO:
           B-TOT = B-LIQ.ImpMn1 .
           B-MON = "S/.".
        END. 
        IF B-LIQ.CodMon = 2 THEN DO:
           B-TOT = B-LIQ.ImpMn2 .
           B-MON = "US$.".
        END. 

        Z = 1.

        FOR EACH Lg-Liqcsgd  OF B-LIQ :
                        
           FIND Almmmatg WHERE Almmmatg.CodCia = S-CODCIA AND
                               Almmmatg.codmat = Lg-Liqcsgd.codmat  
                               NO-LOCK NO-ERROR.
            DISPLAY STREAM Reporte 
               B-LIQ.NroSer WHEN z = 1
               B-LIQ.NroDoc WHEN z = 1
               B-LIQ.FchDoc WHEN z = 1
               B-LIQ.FchIni WHEN z = 1
               B-LIQ.fchFin WHEN z = 1
               B-MON WHEN z = 1 
               B-TOT WHEN z = 1
               Lg-Liqcsgd.CodMat
               Almmmatg.DesMat
/*               Almmmatg.DesMar*/
               Lg-Liqcsgd.CodUnd 
               Lg-Liqcsgd.CanDes
            WITH FRAME F-Deta3.
            DOWN STREAM Reporte WITH FRAME F-Deta3.  
            Z = Z + 1.
        END.
    END.





OUTPUT STREAM Reporte CLOSE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


