&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12
&ANALYZE-RESUME
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS Procedure 
/*--------------------------------------------------------------------------
    File        : 
    Purpose     :

    Syntax      :

    Description :

    Author(s)   :
    Created     :
    Notes       :
  ------------------------------------------------------------------------*/
/*          This .W file was created with the Progress UIB.             */
/*----------------------------------------------------------------------*/

/* ***************************  Definitions  ************************** */
DEFINE INPUT PARAMETER s-ROWID AS ROWID.

DEFINE SHARED VARIABLE S-USER-ID  AS CHAR.
DEFINE SHARED VARIABLE S-CODCIA   AS INTEGER.
DEFINE SHARED VARIABLE S-CODDIV   AS CHAR.
DEF SHARED VAR cl-codcia AS INT.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Procedure
&Scoped-define DB-AWARE no



/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Procedure
   Allow: 
   Frames: 0
   Add Fields to: Neither
   Other Settings: CODE-ONLY COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW Procedure ASSIGN
         HEIGHT             = 2
         WIDTH              = 40.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK Procedure 


/* ***************************  Main Block  *************************** */

FIND CcbCMvto WHERE ROWID(CcbCMvto) = s-ROWID EXCLUSIVE-LOCK NO-ERROR.

FOR EACH CcbDMvto WHERE 
         CcbDMvto.CodCia = CcbCMvto.codcia AND
         CcbDMvto.CodDoc = CcbCMvto.CodDoc AND
         CcbDMvto.NroDoc = CcbCMvto.NroDoc :
    CASE CcbDMvto.TpoRef:
       WHEN 'O' THEN DO:
          /* Dar por cancelado el documento */
          RUN Cancela-Documento.
          /* Grabar el documento como cancelado */
          CREATE CcbDCaja.
          ASSIGN
              CcbDCaja.CodCia = CcbDMvto.CodCia 
              CcbDCaja.CodCli = CcbDMvto.CodCli
              CcbDCaja.CodDoc = CcbDMvto.CodDoc 
              CcbDCaja.NroDoc = CcbDMvto.NroDoc 
              CcbDCaja.CodMon = CcbCMvto.CodMon 
              CcbDCaja.FchDoc = TODAY           /* CcbCMvto.FchDoc */
              CcbDCaja.ImpTot = CcbDMvto.ImpTot 
              CcbDCaja.CodRef = CcbDMvto.CodRef 
              CcbDCaja.NroRef = CcbDMvto.NroRef 
              CcbDCaja.TpoCmb = CcbCMvto.TpoCmb. 
          END.
       WHEN 'L' THEN DO:
          CREATE CcbCDocu.
          ASSIGN
              CcbCDocu.CodCia = CcbDMvto.CodCia 
              CcbCDocu.CodDiv = S-CODDIV
              CcbCDocu.CodCli = CcbDMvto.CodCli
              CcbCDocu.CodDoc = CcbDMvto.CodRef 
              CcbCDocu.NroDoc = CcbDMvto.NroRef 
              CcbCDocu.CodMon = CcbCMvto.CodMon 
              CcbCDocu.CodRef = CcbDMvto.CodDoc  
              CcbCDocu.NroRef = CcbDMvto.NroDoc 
              CcbCDocu.FchDoc = CcbDMvto.FchEmi
              CcbCDocu.FchVto = CcbDMvto.FchVto
              CcbCDocu.FchCie = TODAY
              CcbCDocu.FlgEst = 'P'
              CcbCDocu.FlgUbi = 'C'
              CcbCDocu.Glosa  = CcbCMvto.Glosa
              CcbCDocu.ImpTot = CcbDMvto.ImpTot 
              CcbCDocu.SdoAct = CcbDMvto.ImpTot 
              CcbCDocu.TpoCmb = CcbCMvto.TpoCmb
              CcbCDocu.CodDpto = CcbCMvto.CodDpto
              CcbCDocu.CodProv = CcbCMvto.CodProv
              CcbCDocu.CodDist = CcbCMvto.CodDist
              CcbCDocu.usuario = S-USER-ID.
          FIND gn-clie WHERE 
               gn-clie.CodCia = cl-codcia AND
               gn-clie.CodCli = CcbCDocu.CodCli NO-LOCK NO-ERROR.
          IF AVAILABLE gn-clie THEN  CcbCDocu.NomCli = gn-clie.NomCli.
        END.
      END CASE.
  END.

ASSIGN
   CcbCMvto.FlgEst = 'E'
   CcbCMvto.FchApr = TODAY.

RELEASE CcbCMvto.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&IF DEFINED(EXCLUDE-Cancela-Documento) = 0 &THEN

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE Cancela-Documento Procedure 
PROCEDURE Cancela-Documento :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

FIND CcbCDocu WHERE 
     CcbCDocu.CodCia = CcbDMvto.CodCia AND
     CcbCDocu.CodDoc = CcbDMvto.CodRef AND 
     CcbCDocu.NroDoc = CcbDMvto.NroRef EXCLUSIVE-LOCK NO-ERROR.
IF AVAILABLE CcbCDocu THEN DO:
   IF CcbCDocu.CodMon = CcbCMvto.CodMon THEN
      ASSIGN
         CcbCDocu.SdoAct = CcbCDocu.SdoAct - CcbDMvto.ImpTot.
   ELSE DO:
      IF CcbCDocu.CodMon = 1 THEN
         ASSIGN
            CcbCDocu.SdoAct = CcbCDocu.SdoAct - (CcbDMvto.ImpTot * CcbCMvto.TpoCmb).
      ELSE
         ASSIGN
            CcbCDocu.SdoAct = CcbCDocu.SdoAct - (CcbDMvto.ImpTot / CcbCMvto.TpoCmb).
   END.
   ASSIGN
/*ML01* 25/06/2008 ***
      CcbCDocu.SdoAct = IF CcbCDocu.SdoAct <= 0 THEN 0 ELSE CcbCDocu.SdoAct
*ML01* ***/
      CcbCDocu.FlgEst = IF CcbCDocu.SdoAct = 0 THEN 'C' ELSE CcbCDocu.FlgEst.
/*ML01*/ IF CcbCDocu.SdoAct <= 0 THEN ASSIGN ccbcdocu.fchcie = TODAY.
    ASSIGN
        Ccbcdocu.flgsit = Ccbcdocu.flgsita.     /* VER CANJE POR LETRAS */
END.
RELEASE CcbCDocu.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ENDIF

