&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12
&ANALYZE-RESUME
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS Procedure 
/*--------------------------------------------------------------------------
    File        : 
    Purpose     :

    Syntax      :

    Description :

    Author(s)   :
    Created     :
    Notes       :
  ------------------------------------------------------------------------*/
/*          This .W file was created with the Progress UIB.             */
/*----------------------------------------------------------------------*/

/* ***************************  Definitions  ************************** */
DEFINE INPUT PARAMETER s-ROWID AS ROWID.

DEFINE SHARED VARIABLE S-USER-ID  AS CHAR.
DEFINE SHARED VARIABLE S-CODCIA   AS INTEGER.
DEFINE SHARED VARIABLE S-CODDIV   AS CHAR.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Procedure
&Scoped-define DB-AWARE no



/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Procedure
   Allow: 
   Frames: 0
   Add Fields to: Neither
   Other Settings: CODE-ONLY COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW Procedure ASSIGN
         HEIGHT             = 2
         WIDTH              = 40.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK Procedure 


/* ***************************  Main Block  *************************** */

FIND CcbCMvto WHERE ROWID(CcbCMvto) = s-ROWID EXCLUSIVE-LOCK NO-ERROR.

FOR EACH CcbDMvto WHERE 
        CcbDMvto.CodCia = CcbCMvto.codcia AND
        CcbDMvto.CodDoc = CcbCMvto.CodDoc AND
        CcbDMvto.NroDoc = CcbCMvto.NroDoc AND
        CcbDMvto.TpoRef = 'C':
    /* Grabar el documento como cancelado */
    FIND CcbCDocu WHERE 
         CcbCDocu.CodCia = CcbDMvto.CodCia AND
         CcbCDocu.CodDoc = CcbDMvto.CodRef AND 
         CcbCDocu.NroDoc = CcbDMvto.NroRef EXCLUSIVE-LOCK NO-ERROR.
    IF AVAILABLE CcbCDocu THEN DO:
        IF Ccbcdocu.codmon = 1
        THEN Ccbcdocu.sdoact = Ccbcdocu.sdoact - Ccbdmvto.DepNac[1].
        ELSE Ccbcdocu.sdoact = Ccbcdocu.sdoact - Ccbdmvto.DepUsa[1].
        IF Ccbcdocu.SdoAct <= 0
        THEN ASSIGN
                CcbCDocu.FlgEst = 'C'
                CcbCDocu.FchCan = TODAY.
        CREATE CcbDCaja.
        ASSIGN
            CcbDCaja.CodCia = CcbDMvto.CodCia 
            CcbDCaja.CodCli = CcbDMvto.CodCli
            CcbDCaja.FchDoc = CcbCMvto.FchDoc
            CcbDCaja.CodDoc = CcbDMvto.CodDoc 
            CcbDCaja.NroDoc = CcbDMvto.NroDoc 
            CcbDCaja.CodMon = Ccbcdocu.CodMon 
            CcbDCaja.ImpTot = IF Ccbcdocu.codmon = 1 THEN CcbDMvto.DepNac[1] ELSE CcbDMvto.DepUsa[1] 
            CcbDCaja.TpoCmb = CcbDMvto.DepNac[1] / CcbDmvto.DepUsa[1]
            CcbDCaja.CodRef = CcbDMvto.CodRef 
            CcbDCaja.NroRef = CcbDMvto.NroRef.
    END.
END.

ASSIGN
   CcbCMvto.FlgEst = 'E'
   CcbCMvto.FchApr = TODAY.

RELEASE CcbCMvto.
RELEASE Ccbcdocu.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&IF DEFINED(EXCLUDE-Cancela-Documento) = 0 &THEN

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE Cancela-Documento Procedure 
PROCEDURE Cancela-Documento :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/

FIND CcbCDocu WHERE 
     CcbCDocu.CodCia = CcbDMvto.CodCia AND
     CcbCDocu.CodDoc = CcbDMvto.CodRef AND 
     CcbCDocu.NroDoc = CcbDMvto.NroRef EXCLUSIVE-LOCK NO-ERROR.
IF AVAILABLE CcbCDocu THEN DO:
   IF CcbCDocu.CodMon = CcbCMvto.CodMon THEN
      ASSIGN
         CcbCDocu.SdoAct = CcbCDocu.SdoAct - CcbDMvto.ImpTot.
   ELSE DO:
      IF CcbCDocu.CodMon = 1 THEN
         ASSIGN
            CcbCDocu.SdoAct = CcbCDocu.SdoAct - (CcbDMvto.ImpTot * CcbCMvto.TpoCmb).
      ELSE
         ASSIGN
            CcbCDocu.SdoAct = CcbCDocu.SdoAct - (CcbDMvto.ImpTot / CcbCMvto.TpoCmb).
   END.
   ASSIGN
      CcbCDocu.SdoAct = IF CcbCDocu.SdoAct <= 0 THEN 0 ELSE CcbCDocu.SdoAct
      CcbCDocu.FlgEst = IF CcbCDocu.SdoAct = 0 THEN 'C' ELSE CcbCDocu.FlgEst.
END.
RELEASE CcbCDocu.
END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ENDIF

