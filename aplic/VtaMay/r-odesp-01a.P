&ANALYZE-SUSPEND _VERSION-NUMBER UIB_v8r12
&ANALYZE-RESUME
&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _DEFINITIONS Procedure 
/*--------------------------------------------------------------------------
    File        : r-guides.p
    Purpose     : Impresion de Guias de Despacho en su respectivo Almacen

    Syntax      :

    Description :

    Author(s)   : Carlos Quiroz
    Created     : 24/01/2000
    Notes       : 
  ------------------------------------------------------------------------*/
/*          This .W file was created with the Progress UIB.             */
/*----------------------------------------------------------------------*/

/* ***************************  Definitions  ************************** */
DEFINE INPUT PARAMETER X-ROWID AS ROWID.
DEFINE INPUT PARAMETER X-ALMDES LIKE CcbDDocu.AlmDes.
DEFINE INPUT PARAMETER pTitulo AS CHAR.

DEF SHARED VAR s-codcia  AS INT.
DEF SHARED VAR CL-codcia  AS INT.
DEF SHARED VAR s-coddiv  LIKE gn-divi.coddiv.
DEF SHARED VAR s-codter  LIKE ccbcterm.codter.
DEF SHARED VAR s-user-id AS CHAR.
DEF SHARED VAR s-codmov  LIKE Almtmovm.Codmov.

DEF VAR X-EnLetras AS CHAR FORMAT "x(60)" NO-UNDO.
DEF VAR x-impbrt   AS DECIMAL NO-UNDO.
DEF VAR C-NomCon   AS CHAR FORMAT "X(40)".
DEF VAR N-ITEM     AS INTEGER INIT 0 NO-UNDO.
DEF VAR X-Cheque   AS CHAR NO-UNDO.
DEF VAR x-frmpgo   AS CHARACTER.
DEF VAR X-OD       AS INTEGER.
DEF VAR imptotfac like ccbcdocu.imptot.

DEFINE VARIABLE x-dscto AS DECIMAL.

DEF VAR DES-DIV  AS CHARACTER FORMAT "X(25)".
DEF VAR DES-DIV2 AS CHARACTER FORMAT "X(25)".
DEF VAR X-VIP    AS CHAR      FORMAT "X(10)".

DEF VAR x-client LIKE ccbcdocu.nomcli.
DEF VAR x-vent   LIKE ccbcdocu.codven.
DEF VAR x-direc  LIKE ccbcdocu.dircli.
DEF VAR x-nroord LIKE CcbCDocu.NroSal.
DEF VAR x-aval   LIKE gn-clie.aval1[1].

FIND ccbcdocu WHERE ROWID(ccbcdocu) = X-ROWID NO-LOCK NO-ERROR.

IF NOT AVAILABLE ccbcdocu THEN RETURN.

FIND gn-convt WHERE 
     gn-convt.Codig = CcbCDocu.FmaPgo AND  
     gn-ConVt.TipVta BEGINS "1" NO-LOCK NO-ERROR.
IF AVAILABLE gn-convt THEN
    x-frmpgo = gn-convt.Nombr.
ELSE 
    x-frmpgo = "".

FIND GN-DIVI WHERE 
     GN-DIVI.CodCia = S-CodCia AND  
     GN-DIVI.CodDiv = ccbcdocu.coddiv  NO-LOCK NO-ERROR.
IF AVAILABLE GN-DIVI THEN DES-DIV = GN-DIVI.DesDiv.
ELSE DES-DIV = "".
des-div2 = des-div.

FIND gn-clie WHERE 
     gn-clie.codcia = CL-CODCIA AND  
     gn-clie.codcli = ccbcdocu.codcli NO-LOCK NO-ERROR.

x-aval = gn-clie.aval1[1].

/*Copia de Documentos*/
x-client = CcbCDocu.NomCli.
x-vent   = CcbCDocu.CodVen.
x-direc  = CcbCDocu.DirCli.
x-nroord = CcbCDocu.NroSal.

C-NomCon = "".

X-VIP = IF CcbCDocu.NroCard <> "" THEN "V.I.P" ELSE "".
/************************  PUNTEROS EN POSICION  *******************************/
RUN bin/_numero(ccbcdocu.imptot, 2, 1, OUTPUT X-EnLetras).
X-EnLetras = X-EnLetras + (IF ccbcdocu.codmon = 1 THEN " NUEVOS SOLES" ELSE " DOLARES AMERICANOS").

DEFINE TEMP-TABLE Detalle
    FIELD codcia AS INT
    FIELD CodAlm LIKE Almmmate.CodAlm
    FIELD codmat AS CHAR FORMAT 'x(6)'
    FIELD desmat AS CHAR FORMAT 'x(43)'
    FIELD desmar AS CHAR FORMAT 'x(10)'
    FIELD candes AS DEC  FORMAT '>>,>>9.99'
    FIELD UndBas LIKE Almmmatg.UndBas
    FIELD undvta AS CHAR FORMAT 'x(8)'
    FIELD codubi AS CHAR FORMAT 'x(5)'
    FIELD ruta   AS INT  FORMAT '>9'
    FIELD CodKit AS LOGICAL
    FIELD Glosa  AS CHARACTER
    FIELD codmat1 AS CHAR FORMAT 'x(6)'
    FIELD desmat1 AS CHAR FORMAT 'x(45)'
    FIELD desmar1 AS CHAR FORMAT 'x(10)'
    FIELD candes1 AS DEC  FORMAT '>>,>>9.99'
    FIELD UndBas1 LIKE Almmmatg.UndBas
    FIELD undvta1 AS CHAR FORMAT 'x(8)'
    FIELD codubi1 AS CHAR FORMAT 'x(5)'
    FIELD Glosa1  AS CHARACTER.


DEF BUFFER b-Detalle FOR Detalle.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


&ANALYZE-SUSPEND _UIB-PREPROCESSOR-BLOCK 

/* ********************  Preprocessor Definitions  ******************** */

&Scoped-define PROCEDURE-TYPE Procedure
&Scoped-define DB-AWARE no



/* _UIB-PREPROCESSOR-BLOCK-END */
&ANALYZE-RESUME



/* *********************** Procedure Settings ************************ */

&ANALYZE-SUSPEND _PROCEDURE-SETTINGS
/* Settings for THIS-PROCEDURE
   Type: Procedure
   Allow: 
   Frames: 0
   Add Fields to: Neither
   Other Settings: CODE-ONLY COMPILE
 */
&ANALYZE-RESUME _END-PROCEDURE-SETTINGS

/* *************************  Create Window  ************************** */

&ANALYZE-SUSPEND _CREATE-WINDOW
/* DESIGN Window definition (used by the UIB) 
  CREATE WINDOW Procedure ASSIGN
         HEIGHT             = 5.15
         WIDTH              = 40.
/* END WINDOW DEFINITION */
                                                                        */
&ANALYZE-RESUME

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _INCLUDED-LIB Procedure 
/* ************************* Included-Libraries *********************** */

{src/bin/_prns.i}

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


 


&ANALYZE-SUSPEND _UIB-CODE-BLOCK _CUSTOM _MAIN-BLOCK Procedure 


/* ***************************  Main Block  *************************** */

/************************  DEFINICION DE FRAMES  *******************************/
DEFINE FRAME F-DetaFac
    N-Item         FORMAT "ZZ9"          COLUMN-LABEL '   '
    Detalle.codmat                      COLUMN-LABEL 'CODIGO'
    Detalle.desmat FORMAT 'x(38)'       COLUMN-LABEL 'D E S C R I P C I O N '
    Detalle.desmar FORMAT 'x(6)'       COLUMN-LABEL 'MARCA'
    Detalle.candes FORMAT '>>>>>>9.99'  COLUMN-LABEL 'CANTIDAD'
    Detalle.undbas FORMAT 'x(4)'        COLUMN-LABEL 'U.M.'
    Detalle.CodUbi FORMAT 'x(5)'        COLUMN-LABEL 'ZONA'
    /*Detalle.Ruta   FORMAT '>9'          COLUMN-LABEL 'RUTA'*/ 
    SPACE(3)
    Detalle.codmat1                     COLUMN-LABEL 'CODIGO'
    Detalle.desmat1 FORMAT 'x(45)'      COLUMN-LABEL 'D E S C R I P C I O N '
    Detalle.desmar1 FORMAT 'x(10)'      COLUMN-LABEL 'MARCA'    
    Detalle.candes1 FORMAT '>>>>>>9.99' COLUMN-LABEL 'CANTIDAD'     
    Detalle.undbas1 FORMAT 'x(5)'       COLUMN-LABEL 'U.M.'     
    /*RD01 - Modifica Frame
    Detalle.CodUbi1 FORMAT 'x(5)'       COLUMN-LABEL 'ZONA'  */
    WITH NO-BOX STREAM-IO WIDTH 320 DOWN.

DEFINE FRAME F-HdrFac
    HEADER 
    /*RD01***    
    {&PRN7A} + {&PRN6A} + X-VIP  + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(10)" 
    {&PRN7A} + {&PRN6A} + X-VIP  + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(10)" AT 45
    SKIP  
    ********/ 
    /*DUPLICADO*/
    {&PRN7A} + {&PRN6A} + pTitulo + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(20)' 
    {&PRN7A} + {&PRN6A} + pTitulo + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(20)' AT 80
    SKIP
    {&PRN7A} + {&PRN6A} + 'ORDENADO POR UBICACION'   + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(30)' 
    {&PRN7A} + {&PRN6A} + 'ORDENADO POR DESCRIPCION' + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(30)' AT 70
    SKIP
    /*RD01****
    DES-DIV FORMAT "X(40)"  
    TODAY FORMAT "99/99/9999" STRING(TIME,"HH:MM:SS") 
    /***/
    DES-DIV2 FORMAT "X(40)" AT 80
    TODAY FORMAT "99/99/9999" STRING(TIME,"HH:MM:SS") 
    SKIP 
    ****/

    /*
    {&PRN7A} + {&PRN6A} + gn-clie.aval1[1] + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(10)" 
    {&PRN7A} + {&PRN6A} + gn-clie.aval1[1] + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(10)" AT 80
    */
    /*RD01 - Modifica Impresion
    gn-clie.aval1[1] FORMAT "X(50)"  
    x-aval FORMAT "X(50)" AT 80 
    SKIP  
    ***/
    /*RD01 - Modifica Impresion*/
    "Almacen   : " {&Prn6a} + X-ALMDES + {&Prn6b} FORMAT "X(20)" 
    TODAY FORMAT "99/99/9999" STRING(TIME,"HH:MM:SS")   
    "Almacen   : " AT 84 {&Prn6a} + X-ALMDES + {&Prn6b} FORMAT "X(20)" 
    TODAY FORMAT "99/99/9999" STRING(TIME,"HH:MM:SS")   SKIP
    /***/
    "Numero de"
    {&PRN7A} + {&PRN6A} + ccbcdocu.coddoc + " :" + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(8)"
    {&PRN7A} + {&PRN6A} + ccbcdocu.nrodoc + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "XXXXXX-XXXXXXXXXXXX" 
    "Numero de" AT 80
    {&PRN7A} + {&PRN6A} + ccbcdocu.coddoc + " :" + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(8)"
    {&PRN7A} + {&PRN6A} + ccbcdocu.nrodoc + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "XXXXXX-XXXXXXXXXXXX" 
    SKIP
    "Nro. de Pedido : " 
    {&PRN7A} + {&PRN6A} + CcbCDocu.CodPed CcbCDocu.NroPed + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(20)' 
    /***/
    "Nro. de Pedido : " AT 80
    {&PRN7A} + {&PRN6A} + CcbCDocu.CodPed CcbCDocu.NroPed + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT 'x(20)' 
    SKIP
    "Orden Despacho : " CcbCDocu.NroSal 
    /*RD01 - Modifica Impresion
    "Turno :" AT 40 
    /*{&PRN7A} + {&PRN6A} + STRING(X-OD,"999") + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(6)"*/ 
    {&PRN7A} + {&PRN6A} + STRING(X-OD,"999") + {&PRN6B} + {&PRN7B} + {&PRN4} 
    ****/
    /***/
    "Orden Despacho : " AT 80 x-nroord
    /*RD01 - Modifica Impresion
    "Turno :" /*AT 95 */
    /*{&PRN7A} + {&PRN6A} + STRING(X-OD,"999") + {&PRN6B} + {&PRN7B} + {&PRN4} FORMAT "X(6)"*/
    {&PRN7A} + {&PRN6A} + STRING(X-OD,"999") + {&PRN6B} + {&PRN7B} + {&PRN4}  
    ****/
    SKIP
    "Cliente   : " CcbCDocu.NomCli FORMAT "x(40)"
    "Cliente   : " AT 80 x-client FORMAT "x(40)" 
    SKIP     
    "Vendedor  : " CcbCDocu.CodVen FORMAT "X(40)"
    "Vendedor  : " AT 80 x-vent FORMAT "X(40)" SKIP
    /*RD01 - Modifica Impresion ****
    "Direccion : " CcbCDocu.DirCli FORMAT "x(50)" 
    "Direccion : " AT 80 x-direc FORMAT "x(50)" SKIP
    "Almacen   : " {&Prn6a} + X-ALMDES + {&Prn6b} FORMAT "X(20)" 
    "Almacen   : " AT 84 {&Prn6a} + X-ALMDES + {&Prn6b} FORMAT "X(20)" SKIP
    CAPS(x-frmpgo) FORMAT "X(20)" 
    CAPS(x-frmpgo) AT 80 FORMAT "X(20)" 
    SKIP
    ****/ 
    "OBS : " CAPS(CcbCDocu.Glosa) FORMAT "X(50)" 
    "OBS : " AT 80 CAPS(CcbCDocu.Glosa) FORMAT "X(50)" SKIP 
    "Sacador: ____________________" FORMAT "x(40)" 
    "Cliente: ____________________" AT 80 FORMAT "x(40)"  
    SKIP
    WITH PAGE-TOP NO-LABELS NO-BOX STREAM-IO WIDTH 320.
    

FIND First FacCorre WHERE FacCorre.CodCia = S-CODCIA 
                     AND  FacCorre.CodDoc = "O/D" 
                     AND  trim(FacCorre.CodAlm) = trim(X-ALMDES) /*CcbCDocu.CodAlm */
                     NO-LOCK NO-ERROR.

IF NOT AVAILABLE FacCorre THEN DO:
   MESSAGE "Impresora de O/D no esta configurada" VIEW-AS ALERT-BOX ERROR.
   RETURN.
END.

RUN lib/_port-name (FacCorre.Printer, OUTPUT s-port-name).
IF s-port-name = '' THEN RETURN.

FIND First FacCorre WHERE FacCorre.CodCia = S-CODCIA 
                     AND  FacCorre.CodDoc = "TKT" 
                     AND  trim(FacCorre.CodAlm) = trim(X-ALMDES) /*CcbCDocu.CodAlm */
                     EXCLUSIVE-LOCK NO-ERROR.
/* RHC 30-12-2003 PARCHE */
IF NOT AVAILABLE FacCorre
THEN FIND First FacCorre WHERE FacCorre.CodCia = S-CODCIA 
                     AND  FacCorre.CodDoc = "TKT" 
                     AND  trim(FacCorre.CodAlm) = SUBSTRING(X-ALMDES,1,2)
                     EXCLUSIVE-LOCK NO-ERROR.
IF AVAILABLE FacCorre
THEN DO:
    IF FacCorre.Correlativo = 1000 THEN FacCorre.Correlativo = 1 .
    X-OD = FacCorre.Correlativo .
    FacCorre.Correlativo = FacCorre.Correlativo + 1 .
END.
ELSE X-OD = 1.
RELEASE FacCorre.

/* Cargamos Temporal */
RUN Carga-Temporal.

/*OUTPUT TO PRINTER VALUE(s-port-name) PAGE-SIZE 31.*/
{lib/_printer-to.i 31}
PUT CONTROL {&PRN0} + {&PRN5A} + CHR(33) + {&PRN4}.     

FOR EACH Detalle BREAK BY Detalle.codcia BY Detalle.CodUbi:
    VIEW FRAME F-HdrFac.
    n-item = n-item + 1.    
    DISPLAY 
        n-item 
        Detalle.codmat 
        Detalle.desmat 
        Detalle.desmar 
        Detalle.candes 
        Detalle.undbas 
        Detalle.CodUbi 
        /*Detalle.Ruta*/
        Detalle.codmat1 
        Detalle.desmat1 
        Detalle.desmar1         
        Detalle.candes1 
        Detalle.undbas1 
        /*RD01-Cambio de frame
        Detalle.CodUbi1*/ 
        WITH FRAME F-DetaFac.
    IF LAST-OF(Detalle.codcia)
    THEN DO:
        PAGE.
    END.
END.
OUTPUT CLOSE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME


/* **********************  Internal Procedures  *********************** */

&IF DEFINED(EXCLUDE-Carga-Temporal) = 0 &THEN

&ANALYZE-SUSPEND _UIB-CODE-BLOCK _PROCEDURE Carga-Temporal Procedure 
PROCEDURE Carga-Temporal :
/*------------------------------------------------------------------------------
  Purpose:     
  Parameters:  <none>
  Notes:       
------------------------------------------------------------------------------*/
DEFINE VAR lKit     AS LOGICAL     NO-UNDO.

FOR EACH Ccbddocu OF Ccbcdocu NO-LOCK,
    FIRST Almmmatg OF Ccbddocu NO-LOCK,
    FIRST Almmmate NO-LOCK WHERE Almmmate.codcia = Ccbddocu.codcia
    AND Almmmate.codmat = Ccbddocu.codmat
    AND Almmmate.codalm = Ccbddocu.almdes:
    CREATE Detalle.
    ASSIGN
        Detalle.codcia = s-codcia
        Detalle.codalm = Ccbddocu.almdes
        Detalle.codmat = Almmmatg.codmat
        Detalle.desmat = Almmmatg.desmat
        Detalle.desmar = Almmmatg.desmar
        Detalle.candes = Ccbddocu.candes * Ccbddocu.factor      /* En Unidades Base */
        Detalle.undvta = Ccbddocu.undvta
        DEtalle.undbas = Almmmatg.undbas
        Detalle.codubi = Almmmate.codubi.
END.

/*Buscando Kits*/
FOR EACH Detalle:
    lKit = NO.
/*     FOR EACH AlmdKits NO-LOCK WHERE AlmDKits.CodCia = s-CodCia                           */
/*         AND AlmdKits.CodMat = Detalle.CodMat,                                            */
/*         FIRST Almmmate WHERE Almmmate.CodCia = AlmDKits.CodCia                           */
/*             AND Almmmate.CodAlm = Detalle.CodAlm                                         */
/*             AND Almmmate.CodMat = AlmDKits.CodMat2:                                      */
/*         FIND FIRST b-Detalle WHERE b-Detalle.CodMat = AlmDkits.CodMat2                   */
/*             AND b-Detalle.CodKit NO-ERROR.                                               */
/*         IF NOT AVAIL b-Detalle THEN DO:                                                  */
/*             FIND FIRST almmmatg WHERE almmmatg.codcia = almmmate.codcia                  */
/*                 AND almmmatg.codmat = AlmDKits.CodMat2 NO-LOCK NO-ERROR.                 */
/*             CREATE b-Detalle.                                                            */
/*             ASSIGN                                                                       */
/*                 b-Detalle.CodCia = s-CodCia                                              */
/*                 b-Detalle.CodMat = AlmDKits.CodMat2.                                     */
/*             IF AVAIL almmmatg THEN DO:                                                   */
/*                 ASSIGN                                                                   */
/*                     b-Detalle.DesMat = Almmmatg.DesMat + ' (' + Detalle.CodMat + ')'     */
/*                     b-Detalle.DesMar = Almmmatg.DesMar                                   */
/*                     b-Detalle.UndBas = Almmmatg.UndBas.                                  */
/*             END.                                                                         */
/*             ASSIGN                                                                       */
/*                 b-Detalle.CodAlm = Detalle.CodAlm                                        */
/*                 b-Detalle.CodUbi = Almmmate.CodUbi                                       */
/*                 b-Detalle.CanDes = Detalle.CanDes * AlmDKits.Cantidad                    */
/*                 b-Detalle.Glosa  = STRING(Detalle.CanDes).                               */
/*         END.                                                                             */
/*         ELSE DO:                                                                         */
/*             ASSIGN                                                                       */
/*                 b-Detalle.CanDes = b-Detalle.CanDes + Detalle.CanDes * AlmDKits.Cantidad */
/*                 b-Detalle.DesMat = b-Detalle.DesMat + ' (' + Detalle.CodMat + ')'        */
/*                 b-Detalle.Glosa  = STRING(DEC(b-Detalle.Glosa) + Detalle.CanDes) .       */
/*         END.                                                                             */
/*         b-Detalle.Glosa = b-Detalle.Glosa + " Kit(s)".                                   */
/*         lKit = YES.                                                                      */
/*      END.                                                                                */
     IF lKit THEN DELETE Detalle.
 END.

 DEF VAR x-Ruta AS INT.
 FOR EACH Detalle BY Detalle.codubi:
     x-Ruta = x-Ruta + 1.
     Detalle.Ruta = x-Ruta.
 END.


 /* CARGAMOS LO MISMO PERO POR DESCRIPCION */
 x-Ruta = 1.
 FOR EACH Detalle BREAK BY Detalle.codcia BY Detalle.DesMat:
     FIND b-Detalle WHERE b-Detalle.Ruta = x-Ruta.
     ASSIGN
         b-Detalle.codmat1 = Detalle.codmat
         b-Detalle.desmat1 = Detalle.desmat
         b-Detalle.desmar1 = Detalle.desmar
         b-Detalle.undbas1 = Detalle.undbas
         b-Detalle.codubi1 = Detalle.codubi
         b-Detalle.candes1 = Detalle.candes.
    x-Ruta = x-Ruta + 1.
 END.

END PROCEDURE.

/* _UIB-CODE-BLOCK-END */
&ANALYZE-RESUME

&ENDIF

