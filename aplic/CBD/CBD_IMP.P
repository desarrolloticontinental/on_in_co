DEFINE INPUT PARAMETER s-codcia  LIKE cb-dmov.codcia.
DEFINE INPUT PARAMETER x-CodCta  LIKE cb-dmov.codcta.
DEFINE INPUT PARAMETER x-CodDiv  LIKE cb-dmov.coddiv.
DEFINE INPUT PARAMETER x-Periodo LIKE cb-dmov.periodo.
DEFINE INPUT PARAMETER x-NroMes  LIKE cb-dmov.nromes.
DEFINE INPUT PARAMETER x-CodMon  LIKE cb-dmov.codmon.

DEFINE OUTPUT PARAMETER ImpCal1  AS DECIMAL.
DEFINE OUTPUT PARAMETER ImpCal2  AS DECIMAL.
DEFINE OUTPUT PARAMETER ImpCal3  AS DECIMAL.
DEFINE OUTPUT PARAMETER ImpCal4  AS DECIMAL.
DEFINE OUTPUT PARAMETER ImpCal5  AS DECIMAL.
DEFINE OUTPUT PARAMETER ImpCal6  AS DECIMAL.

DEFINE VARIABLE i AS INTEGER.
DEFINE VARIABLE x-ImpDbe AS DECIMAL.
DEFINE VARIABLE x-ImpHbe AS DECIMAL.

ImpCal1 = 0.  /*  Debe del Mes     */
ImpCal2 = 0.  /*  Haber del Mes    */
ImpCal3 = 0.  /*  Saldo del Mes    */
ImpCal4 = 0.  /*  Debe Acumulado   */
ImpCal5 = 0.  /*  Haber Acumulado  */
ImpCal6 = 0.  /*  Saldo Acumulado  */

x-CodCta = TRIM(x-CodCta).
x-CodDiv = TRIM(x-CodDiv).

FOR EACH cb-acmd WHERE cb-acmd.CodCia  = s-codcia AND 
    cb-acmd.Periodo = x-Periodo AND 
    cb-acmd.CodCta  BEGINS TRIM(x-CodCta) AND 
    cb-acmd.CodDiv  BEGINS ( x-CodDiv ) NO-LOCK:
    RUN ACUMULA.
END.           
  
ImpCal3 = ImpCal1 - ImpCal2.
ImpCal6 = ImpCal4 - ImpCal5.
RETURN.


PROCEDURE ACUMULA.
   DO i = 1 TO ( x-NroMes + 1) :
        CASE x-codmon:
        WHEN 1 THEN DO:
            x-ImpDbe = cb-acmd.DbeMn1[ i ].
            x-ImpHbe = cb-acmd.HbeMn1[ i ].
        END.
        WHEN 2 THEN DO:
           x-ImpDbe = cb-acmd.DbeMn2[ i ].
           x-ImpHbe = cb-acmd.HbeMn2[ i ].
        END.
        WHEN 3 THEN DO:
            x-ImpDbe = cb-acmd.DbeMn3[ i ].
            x-ImpHbe = cb-acmd.HbeMn3[ i ].
        END.
        END CASE.
        ImpCal4 = ImpCal4 + x-ImpDbe.
        ImpCal5 = ImpCal5 + x-ImpHbe.
        IF i = ( x-NroMes + 1 )
        THEN DO:
           ImpCal1 = ImpCal1 + x-ImpDbe.
           ImpCal2 = ImpCal2 + x-ImpHbe.
        END.
    END.
END PROCEDURE.
